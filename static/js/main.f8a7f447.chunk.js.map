{"version":3,"sources":["utils/setAuthToken.js","config/url.js","actions/authActions.js","actions/types.js","actions/fakeAuthActions.js","reducers/authReducer.js","reducers/fakeAuthReducer.js","reducers/errorReducer.js","reducers/serverResponseReducer.js","reducers/userReducer.js","reducers/fakeUserReducer.js","reducers/index.js","store.js","components/layout/Navbar.js","components/layout/Landing.js","components/a/A.js","components/common/TextFieldGroup.js","components/validation/auth/login.js","components/b/B.js","components/common/Spinner.js","components/c/C.js","actions/fakeUserActions.js","components/more/More.js","components/validation/auth/registration.js","components/auth/Register.js","components/common/Message.js","components/auth/Login.js","actions/userActions.js","components/user/User.js","components/pages/Dashboard.js","components/Item.js","components/Test.js","App.js","serviceWorker.js","index.js","components/validation/is-empty.js","assets/images/Spinner.gif"],"names":["setAuthToken","token","axios","defaults","headers","common","SERVER_URL","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","window","location","href","setFakeCurrentUser","userData","initialState","isAuthenticated","user","isLoading","isFakeAuthenticated","fakeUser","users","fakeUsers","loading","combineReducers","auth","state","arguments","length","undefined","action","Object","objectSpread","isEmpty","fakeAuth","errors","server","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","apply","devToolsExtension","f","Navbar","e","preventDefault","this","props","_this$props$auth","authLinks","react_default","a","createElement","onClick","onLogoutClick","bind","className","Link","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","username","Component","connect","Landing","A","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","data","modal","that","unik","shortid","generate","$","click","append","color","i","Math","floor","random","getRandomColor","show","draggable","resizable","on","parent","remove","clickHandler","TextFieldGroup","_ref","name","placeholder","value","error","info","onChange","disabled","classnames","is-invalid","defaultProps","require","validateLoginInput","email","password","Validator","isEmail","isValid","B","changeHandler","assertThisInitialized","submitHandler","history","push","nextProps","setState","event","defineProperty","target","_validateLoginInput","loginData","fakeLogin","noValidate","onSubmit","htmlFor","common_TextFieldGroup","post","FAKE_SERVER_URL","then","res","setItem","JSON","stringify","success","concat","catch","err","response","withRouter","common_Spinner","src","spinner","style","width","margin","display","alt","C","activePage","listFakeUsers","logoutFakeUser","pageNumber","fakeLogoutHandler","scope","map","key","first_name","last_name","Pagination_default","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","handlePageChange","linkClass","itemClass","get","More","validateRegistrationInput","pasword2","isLength","min","max","password2","equals","Register","_validateRegistration","newUser","registerUser","method","Message","msg","class","data-dismiss","Login","loginUser","_this$state$server","common_Message","jwt_decode","listUsers","User","items","_id","firstName","lastName","Dashboard","moment","date","fromNow","Item","delete","Test","nameArr","deleteHandler","console","log","arr","toConsumableArray","splice","_this2","item","fakeToken","parse","jwtToken","currentTime","Date","now","exp","App","es","HashRouter","layout_Navbar","Switch","Route","exact","path","component","Boolean","hostname","match","jQuery","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports","keys","trim","__webpack_require__","p"],"mappings":"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","file":"static/js/main.f8a7f447.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply to every request\n    axios.defaults.headers.common['Authorization'] = token\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common['Authoriztion']\n  }\n}\n\nexport default setAuthToken\n","export const CLIENT_URL = 'http://localhost:3000'\n// export const SERVER_URL = 'http://localhost:5000'\nexport const SERVER_URL = 'https://express-boilerplate.herokuapp.com'\nexport const FAKE_SERVER_URL = 'https://reqres.in'\n","import axios from 'axios'\nimport setAuthToken from '../utils/setAuthToken'\nimport jwt_decode from 'jwt-decode'\n\nimport {\n  GET_ERRORS,\n  SET_CURRENT_USER,\n  SERVER_RESPONSE,\n  AUTH_LOADING\n} from './types'\nimport { SERVER_URL } from '../config/url'\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n  dispatch({\n    type: AUTH_LOADING,\n    payload: true\n  })\n  axios\n    .post(SERVER_URL + '/api/users/register', userData)\n    .then(res => {\n      dispatch({\n        type: AUTH_LOADING,\n        payload: false\n      })\n      history.push('/login')\n      dispatch({\n        type: SERVER_RESPONSE,\n        payload: { success: `Welcome! You have been registered successfully.` }\n      })\n    })\n    .catch(err => {\n      if (err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n    })\n}\n\n// Login - Get User Token\nexport const loginUser = userData => dispatch => {\n  dispatch({\n    type: AUTH_LOADING,\n    payload: true\n  })\n  axios\n    .post(SERVER_URL + '/api/users/login', userData)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data\n      // Set token to ls\n      localStorage.setItem('jwtToken', token)\n      // Set token to Auth header\n      setAuthToken(token)\n      // Decode token to get user data\n      const decoded = jwt_decode(token)\n      // Set current user\n      dispatch(setCurrentUser(decoded))\n      dispatch({\n        type: AUTH_LOADING,\n        payload: false\n      })\n    })\n    .catch(err => {\n      if (err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n    })\n}\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  }\n}\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('jwtToken')\n  // Remove auth header for future requests\n  setAuthToken(false)\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}))\n  // Redirect to login\n  window.location.href = '/'\n}\n","export const GET_ERRORS = 'GET_ERRORS'\nexport const SERVER_RESPONSE = 'SERVER_RESPONSE'\n\nexport const SET_FAKE_CURRENT_USER = 'SET_FAKE_CURRENT_USER'\nexport const LIST_FAKE_USERS = 'LIST_FAKE_USERS'\nexport const FAKE_USERS_LOADING = 'FAKE_USERS_LOADING'\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER'\nexport const LIST_USERS = 'LIST_USERS'\n\nexport const USER_LOADING = 'USER_LOADING'\nexport const AUTH_LOADING = 'AUTH_LOADING'\n","import axios from 'axios'\nimport setAuthToken from '../utils/setAuthToken'\n\nimport { GET_ERRORS, SET_FAKE_CURRENT_USER, SERVER_RESPONSE } from './types'\nimport { FAKE_SERVER_URL } from '../config/url'\n\n// Login - Get User Token\nexport const fakeLogin = userData => dispatch => {\n  axios\n    .post(FAKE_SERVER_URL + '/api/login', userData)\n    .then(res => {\n      // Save to localStorage\n      const { token } = res.data\n      if (token) {\n        // Set token to ls\n        localStorage.setItem('fakeToken', token)\n        localStorage.setItem('fakeUser', JSON.stringify(userData))\n        // Set token to Auth header\n        setAuthToken(token)\n        // Set current user\n        dispatch(setFakeCurrentUser(userData))\n        dispatch({\n          type: SERVER_RESPONSE,\n          payload: { success: `You are logged is as: ${userData.email}` }\n        })\n      } else {\n        dispatch({\n          type: GET_ERRORS,\n          payload: { error: \"Can't login\" }\n        })\n      }\n    })\n    .catch(err => {\n      if (err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n    })\n}\n\n// Set logged in user\nexport const setFakeCurrentUser = userData => {\n  return {\n    type: SET_FAKE_CURRENT_USER,\n    payload: userData\n  }\n}\n\n// Log user out\nexport const logoutFakeUser = () => dispatch => {\n  // Remove token from localStorage\n  localStorage.removeItem('fakeToken')\n  // Remove auth header for future requests\n  setAuthToken(false)\n  // Set current user to {} which will set isAuthenticated to false\n  dispatch(setFakeCurrentUser({}))\n  // Redirect to login\n  window.location.href = '/'\n}\n","import isEmpty from 'lodash/isEmpty'\nimport { SET_CURRENT_USER, AUTH_LOADING } from '../actions/types'\n\nconst initialState = {\n  isAuthenticated: false,\n  user: {},\n  isLoading: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_CURRENT_USER:\n      return {\n        ...state,\n        isAuthenticated: !isEmpty(action.payload),\n        user: action.payload\n      }\n    case AUTH_LOADING:\n      return {\n        ...state,\n        isLoading: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import isEmpty from 'lodash/isEmpty'\nimport { SET_FAKE_CURRENT_USER } from '../actions/types'\n\nconst initialState = {\n  isFakeAuthenticated: false,\n  fakeUser: {}\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SET_FAKE_CURRENT_USER:\n      return {\n        ...state,\n        isFakeAuthenticated: !isEmpty(action.payload),\n        fakeUser: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { GET_ERRORS } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { SERVER_RESPONSE } from '../actions/types'\n\nconst initialState = {}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case SERVER_RESPONSE:\n      return action.payload\n    default:\n      return state\n  }\n}\n","import { LIST_USERS } from '../actions/types'\n\nconst initialState = {\n  users: []\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LIST_USERS:\n      return {\n        ...state,\n        users: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { LIST_FAKE_USERS, FAKE_USERS_LOADING } from '../actions/types'\n\nconst initialState = {\n  fakeUsers: [],\n  loading: false\n}\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LIST_FAKE_USERS:\n      return {\n        ...state,\n        fakeUsers: action.payload,\n        loading: false\n      }\n    case FAKE_USERS_LOADING:\n      return {\n        ...state,\n        loading: action.payload\n      }\n    default:\n      return state\n  }\n}\n","import { combineReducers } from 'redux'\nimport authReducer from './authReducer'\nimport fakeAuthReducer from './fakeAuthReducer'\nimport errorReducer from './errorReducer'\nimport serverResponseReducer from './serverResponseReducer'\nimport userReducer from './userReducer'\nimport fakeUserReducer from './fakeUserReducer'\n\nexport default combineReducers({\n  auth: authReducer,\n  fakeAuth: fakeAuthReducer,\n  errors: errorReducer,\n  server: serverResponseReducer,\n  users: userReducer,\n  fakeUsers: fakeUserReducer\n})\n","import { createStore, applyMiddleware, compose } from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers'\n\nconst initialState = {}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    //window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    window.devToolsExtension ? window.devToolsExtension() : f => f\n  )\n)\n\nexport default store\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { logoutUser } from '../../actions/authActions'\n\nclass Navbar extends Component {\n  onLogoutClick(e) {\n    e.preventDefault()\n    this.props.logoutUser()\n  }\n  render() {\n    const { isAuthenticated, user } = this.props.auth\n    const { isFakeAuthenticated } = this.props.fakeAuth\n\n    const authLinks = (\n      <a\n        onClick={this.onLogoutClick.bind(this)}\n        href=\"#\"\n        className=\"badge badge-danger p-2\"\n      >\n        <span className=\"h6\">Logout from Real Server</span>\n      </a>\n    )\n\n    return (\n      <nav className=\"navbar navbar-expand-lg navbar-dark bg-info\">\n        <Link className=\"navbar-brand\" to=\"/\">\n          React.js Demo\n        </Link>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarColor01\"\n          aria-controls=\"navbarColor01\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n        >\n          <span className=\"navbar-toggler-icon\" />\n        </button>\n\n        <div className=\"collapse navbar-collapse\" id=\"navbarColor01\">\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/a/\">\n                A\n              </Link>\n            </li>\n            {!isFakeAuthenticated && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/b/\">\n                  B(Login)\n                </Link>\n              </li>\n            )}\n            {isFakeAuthenticated && (\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/c/\">\n                  C(Dashboard)\n                </Link>\n              </li>\n            )}\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/more/\">\n                More\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link className=\"nav-link\" to=\"/test/\">\n                Test\n              </Link>\n            </li>\n          </ul>\n          : <ul className=\"navbar-nav mr-auto\" />\n          <div className=\"form-inline my-2 my-lg-0\">\n            {isAuthenticated && (\n              <a className=\"badge badge-pill badge-light\" href=\"#\">\n                {user.username}\n              </a>\n            )}\n            &nbsp;\n            {isAuthenticated && authLinks}\n          </div>\n        </div>\n      </nav>\n    )\n  }\n}\n\nNavbar.propTypes = {\n  logoutUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  fakeAuth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  fakeAuth: state.fakeAuth\n})\n\nexport default connect(\n  mapStateToProps,\n  { logoutUser }\n)(Navbar)\n","import React, { Component } from 'react'\n\nclass Landing extends Component {\n  render() {\n    return (\n      <div className=\"row justify-content-center p-5\">\n        <div className=\"col-sm-6 mb-10\">\n          <div>\n            <h3 className=\"h3 pb-1\">Md. Shahadat Hossain</h3>\n            <hr />\n          </div>\n          <div className=\"text-right\">\n            <p>Full Stack Developer</p>\n            <a href=\"mailto:itsunclexo@gmail.com\">shahadat.cseru@gmail.com</a>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport $ from 'jquery'\nimport 'jquery-ui-dist/jquery-ui'\nimport shortid from 'shortid'\n\nclass A extends Component {\n  constructor () {\n    super()\n    this.data = {}\n  }\n\n  componentDidMount () {\n    this.modal()\n  }\n\n  clickHandler (e) {\n    e.preventDefault()\n    this.modal()\n  }\n\n  modal () {\n    var that = this\n    const unik = shortid.generate()\n    that.data[unik] = unik\n\n    // Random Color\n    function getRandomColor () {\n      var letters = '0123456789ABCDEF'\n      var color = '#'\n      for (var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)]\n      }\n      return color\n    }\n\n    $('.add').click(function () {\n      if (that.data[unik]) {\n        $('#vbit').append(\n          '<div class=\"test\" style=\"background-color: ' +\n            getRandomColor() +\n            '\" id=\"hello-' +\n            that.data[unik] +\n            '\"><i class=\"closing' +\n            that.data[unik] +\n            '\">X</i></div>'\n        )\n        $('#hello-' + that.data[unik]).show().draggable().resizable()\n\n        $('.closing' + that.data[unik]).on('click', function () {\n          $(this).parent().remove()\n          delete that.data[unik]\n        })\n      }\n    })\n  }\n\n  render () {\n    return (\n      <div className='row justify-content-center p-5'>\n        <div className='col-sm-12 mb-10'>\n          <a\n            className='add btn btn-success'\n            onClick={this.clickHandler.bind(this)}\n            href='#'\n          >\n            Add Modal\n          </a>\n\n          <div id='vbit' />\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default A\n","import React from 'react'\nimport classnames from 'classnames'\nimport PropTypes from 'prop-types'\nimport isEmpty from 'lodash/isEmpty'\n\nconst TextFieldGroup = ({\n  name,\n  placeholder,\n  value,\n  id,\n  error,\n  info,\n  type,\n  onChange,\n  disabled\n}) => {\n  return (\n    <div>\n      <input\n        onChange={onChange}\n        type={type}\n        name={name}\n        className={classnames('form-control', {\n          'is-invalid': !isEmpty(error)\n        })}\n        id={id}\n        placeholder={placeholder}\n        value={value}\n        disabled={disabled}\n      />\n      {info && <small className='form-text text-muted'>{info}</small>}\n      {error && <div className='invalid-feedback'>{error}</div>}\n    </div>\n  )\n}\n\nTextFieldGroup.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  id: PropTypes.string,\n  placeholder: PropTypes.string,\n  error: PropTypes.string,\n  info: PropTypes.string,\n  disabled: PropTypes.string\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup\n","import Validator from 'validator'\nconst isEmpty = require('../is-empty')\n\nconst validateLoginInput = data => {\n  let errors = {}\n\n  data.email = !isEmpty(data.email) ? data.email : ''\n  data.password = !isEmpty(data.password) ? data.password : ''\n\n  // Email\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid'\n  }\n\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email is required'\n  }\n\n  // Password\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password is required'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  }\n}\n\nexport default validateLoginInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport TextFieldGroup from '../common/TextFieldGroup'\nimport { fakeLogin } from '../../actions/fakeAuthActions'\n\nimport validateLoginInput from '../validation/auth/login'\n\nclass B extends Component {\n  constructor () {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      errors: {}\n    }\n\n    this.changeHandler = this.changeHandler.bind(this)\n    this.submitHandler = this.submitHandler.bind(this)\n  }\n\n  componentDidMount () {\n    if (this.props.fakeAuth.isFakeAuthenticated) {\n      this.props.history.push('/c')\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.fakeAuth.isFakeAuthenticated) {\n      this.props.history.push('/c')\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n  }\n\n  changeHandler (event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  isValid (data) {\n    const { errors, isValid } = validateLoginInput(data)\n    if (!isValid) {\n      this.setState({ errors })\n    }\n    return isValid\n  }\n\n  submitHandler (event) {\n    event.preventDefault()\n    const loginData = {\n      email: this.state.email,\n      password: this.state.password\n    }\n\n    if (this.isValid(loginData)) {\n      this.setState({ errors: {} })\n      this.props.fakeLogin(loginData)\n    }\n  }\n\n  render () {\n    const { errors } = this.state\n    return (\n      <div className='container center'>\n        <div className='row justify-content-center p-5'>\n\n          <div className='col-sm-6 mb-10'>\n            <h3 className='h3 pb-1'>Fake Login</h3>\n            <hr />\n            <form noValidate onSubmit={this.submitHandler}>\n              <fieldset>\n                <div className='form-group'>\n                  <label htmlFor='email'>Email address</label>\n                  <TextFieldGroup\n                    placeholder='Email Address'\n                    name='email'\n                    type='email'\n                    id='email'\n                    value={this.state.email}\n                    onChange={this.changeHandler}\n                    error={errors.email}\n                  />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='password'>Password</label>\n                  <TextFieldGroup\n                    placeholder='Password'\n                    name='password'\n                    type='password'\n                    id='password'\n                    value={this.state.password}\n                    onChange={this.changeHandler}\n                    error={errors.password}\n                  />\n                </div>\n\n                <button type='submit' className='btn btn-info btn-lg btn-block'>\n                  Login\n                </button>\n\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nB.propTypes = {\n  fakeLogin: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  fakeAuth: state.fakeAuth,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { fakeLogin })(withRouter(B))\n","import React from 'react'\nimport spinner from '../../assets/images/Spinner.gif'\n\nexport default () => {\n  return (\n    <div>\n      <img\n        src={spinner}\n        style={{ width: '200px', margin: 'auto', display: 'block' }}\n        alt='Loading...'\n      />\n    </div>\n  )\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport Pagination from 'react-js-pagination'\nimport Spinner from '../common/Spinner'\nimport { logoutFakeUser } from '../../actions/fakeAuthActions'\nimport { listFakeUsers } from '../../actions/fakeUserActions'\n\nclass C extends Component {\n  constructor () {\n    super()\n    this.state = {\n      fakeUsers: {},\n      server: {},\n      errors: {},\n      activePage: 1\n    }\n  }\n  componentDidMount () {\n    if (!this.props.fakeAuth.isFakeAuthenticated) {\n      this.props.history.push('/')\n    }\n\n    // Get users\n    this.props.listFakeUsers(this.state.activePage)\n  }\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n    if (nextProps.server) {\n      this.setState({ server: nextProps.server })\n    }\n    if (nextProps.fakeUsers) {\n      this.setState({ fakeUsers: nextProps.fakeUsers })\n    }\n  }\n\n  fakeLogoutHandler () {\n    // Logout fake user\n    this.props.logoutFakeUser()\n  }\n\n  handlePageChange (pageNumber) {\n    this.setState({ activePage: pageNumber })\n    this.props.listFakeUsers(pageNumber)\n  }\n  render () {\n    const { isFakeAuthenticated } = this.props.fakeAuth\n\n    const user = isFakeAuthenticated ? this.props.fakeAuth.fakeUser.email : null\n\n    const users = this.state.fakeUsers.fakeUsers\n      ? this.state.fakeUsers.fakeUsers.data\n      : []\n\n    const content = this.state.fakeUsers.loading\n      ? <Spinner />\n      : <div className='row justify-content-center p-5'>\n        <div className='col-sm-6 mb-10'>\n\n          {isFakeAuthenticated &&\n          <button\n            onClick={this.fakeLogoutHandler.bind(this)}\n            className='badge badge-danger float-right p-2'\n              >\n            <span className='h6'>Logout</span>\n          </button>}\n          <h3 className='h3 pb-1'>Dashboard</h3>\n\n          {/* {success && <Message msg={success} type='alert-success' />}\n            {error && <Message msg={error} type='alert-danger' />} */}\n          <h5 className='bg-light p-1'>\n              Logged in as: {user}\n          </h5>\n\n          <div className='container'>\n            <table className='table table-striped table-hover'>\n              <thead>\n                <tr className='row'>\n                  <th scope='col' className='col-sm-2'>Id</th>\n                  <th scope='col' className='col-sm-5'>First_Name</th>\n                  <th scope='col' className='col-sm-5'>Last_Name</th>\n                </tr>\n              </thead>\n              <tbody>\n                {users &&\n                    users.map(user => (\n                      <tr className='row' key={user.id}>\n                        <td className='col-sm-2'>{user.id}</td>\n                        <td className='col-sm-5'>{user.first_name}</td>\n                        <td className='col-sm-5'>{user.last_name}</td>\n                      </tr>\n                    ))}\n\n              </tbody>\n              <tfoot>\n                <tr>\n                  <td>\n                    <Pagination\n                      activePage={this.state.activePage}\n                      itemsCountPerPage={3}\n                      totalItemsCount={12}\n                      pageRangeDisplayed={5}\n                      onChange={this.handlePageChange.bind(this)}\n                      linkClass='page-link'\n                      itemClass='page-item'\n                      />\n                  </td>\n                </tr>\n              </tfoot>\n            </table>\n          </div>\n        </div>\n      </div>\n    return content\n  }\n}\n\nC.propTypes = {\n  listFakeUsers: PropTypes.func.isRequired,\n  logoutFakeUser: PropTypes.func.isRequired,\n  fakeAuth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  fakeAuth: state.fakeAuth,\n  server: state.server,\n  fakeUsers: state.fakeUsers\n})\n\nexport default connect(mapStateToProps, { listFakeUsers, logoutFakeUser })(\n  withRouter(C)\n)\n","import axios from 'axios'\n\nimport { GET_ERRORS, LIST_FAKE_USERS, FAKE_USERS_LOADING } from './types'\nimport { FAKE_SERVER_URL } from '../config/url'\n\n// Get users list\nexport const listFakeUsers = activePage => dispatch => {\n  dispatch({\n    type: FAKE_USERS_LOADING,\n    payload: true\n  })\n  axios\n    .get(FAKE_SERVER_URL + '/api/users?page=' + activePage)\n    .then(res => {\n      dispatch({\n        type: LIST_FAKE_USERS,\n        payload: res.data\n      })\n    })\n    .catch(err => {\n      if (err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n    })\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst More = () => {\n  return (\n    <div className=\"row justify-content-center p-5\">\n      <div className=\"col-sm-6 mb-10 justify-content-center\">\n        <p>\n          Real Login/Registration implemented here. Express server is hosted at{' '}\n          <a href=\"https://www.heroku.com/\">Heroku</a> and MongoDB hosted at{' '}\n          <a href=\"https://mlab.com/\">mlab.com</a>\n        </p>\n        <div>\n          <Link className=\"btn btn-info btn-lg\" to=\"/login\">\n            Login\n          </Link>\n          &nbsp;\n          <Link className=\"btn btn-success btn-lg\" to=\"/register\">\n            Register\n          </Link>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default More\n","import Validator from 'validator'\nconst isEmpty = require('../is-empty')\n\nconst validateRegistrationInput = data => {\n  let errors = {}\n\n  data.name = !isEmpty(data.name) ? data.name : ''\n  data.email = !isEmpty(data.email) ? data.email : ''\n  data.password = !isEmpty(data.password) ? data.password : ''\n  data.pasword2 = !isEmpty(data.pasword2) ? data.pasword2 : ''\n\n  // Name\n  if (!Validator.isLength(data.name, { min: 2, max: 30 })) {\n    errors.name = 'Name must be between 2 and 30 characters'\n  }\n\n  if (Validator.isEmpty(data.name)) {\n    errors.name = 'Name is required'\n  }\n\n  // Email\n  if (Validator.isEmpty(data.email)) {\n    errors.email = 'Email is required'\n  }\n\n  if (!Validator.isEmail(data.email)) {\n    errors.email = 'Email is invalid'\n  }\n\n  // Password\n  if (Validator.isEmpty(data.password)) {\n    errors.password = 'Password is required'\n  }\n\n  if (!Validator.isLength(data.password, { min: 4, max: 30 })) {\n    errors.password = 'Password must be at least 4 characters'\n  }\n\n  // Password2\n  if (Validator.isEmpty(data.password2)) {\n    errors.password2 = 'Confirm Password is required'\n  }\n\n  if (!Validator.equals(data.password, data.password2)) {\n    errors.password2 = 'Password must be match'\n  }\n\n  return {\n    errors,\n    isValid: isEmpty(errors)\n  }\n}\n\nexport default validateRegistrationInput\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { withRouter } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport TextFieldGroup from '../common/TextFieldGroup'\nimport Spinner from '../common/Spinner'\nimport { registerUser } from '../../actions/authActions'\n\nimport validateRegistrationInput from '../validation/auth/registration'\n\nclass Register extends Component {\n  constructor () {\n    super()\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password2: '',\n      errors: {}\n    }\n\n    this.changeHandler = this.changeHandler.bind(this)\n    this.submitHandler = this.submitHandler.bind(this)\n  }\n\n  componentDidMount () {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n  }\n\n  changeHandler (event) {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  isValid (data) {\n    const { errors, isValid } = validateRegistrationInput(data)\n    if (!isValid) {\n      this.setState({ errors })\n    }\n    return isValid\n  }\n\n  submitHandler (event) {\n    event.preventDefault()\n    const newUser = {\n      name: this.state.name,\n      email: this.state.email,\n      password: this.state.password,\n      password2: this.state.password2\n    }\n    if (this.isValid(newUser)) {\n      this.setState({ errors: {} })\n      this.props.registerUser(newUser, this.props.history)\n    }\n  }\n  render () {\n    const { errors } = this.state\n\n    const content = this.props.auth.isLoading\n      ? <Spinner />\n      : <div className='container center'>\n        <div className='row justify-content-center p-5'>\n          <div className='col-sm-6 mb-10'>\n            <h3 className='h3 pb-1'>Register</h3>\n            <hr />\n            <form\n              noValidate\n              onSubmit={this.submitHandler.bind(this)}\n              method='POST'\n              >\n              <fieldset>\n                <div className='form-group'>\n                  <label htmlFor='name'>Name</label>\n                  <TextFieldGroup\n                    placeholder='Enter Name'\n                    name='name'\n                    id='name'\n                    value={this.state.name}\n                    onChange={this.changeHandler}\n                    error={errors.name}\n                    />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='email'>Email Address</label>\n                  <TextFieldGroup\n                    placeholder='Enter Email'\n                    name='email'\n                    type='email'\n                    id='email'\n                    value={this.state.email}\n                    onChange={this.changeHandler}\n                    error={errors.email}\n                    />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='password'>Password</label>\n                  <TextFieldGroup\n                    placeholder='Enter Password'\n                    name='password'\n                    type='password'\n                    id='password'\n                    value={this.state.password}\n                    onChange={this.changeHandler}\n                    error={errors.password}\n                    />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='password2'>Repeat Password</label>\n                  <TextFieldGroup\n                    placeholder='Repeat Password'\n                    name='password2'\n                    type='password'\n                    id='password2'\n                    value={this.state.password2}\n                    onChange={this.changeHandler}\n                    error={errors.password2}\n                    />\n                </div>\n\n                <button type='submit' className='btn btn-primary'>\n                    Submit\n                  </button>\n\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n    return content\n  }\n}\n\nRegister.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n})\n\nexport default connect(mapStateToProps, { registerUser })(withRouter(Register))\n","import React from 'react'\n\nconst Message = ({ msg, type }) => {\n  return (\n    <div class={`alert alert-dismissible ${type}`}>\n      <button type='button' className='close' data-dismiss='alert'>\n        ×\n      </button>\n      {msg}\n    </div>\n  )\n}\n\nexport default Message\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport Message from '../common/Message'\nimport TextFieldGroup from '../common/TextFieldGroup'\nimport Spinner from '../common/Spinner'\nimport { loginUser } from '../../actions/authActions'\n\nimport validateLoginInput from '../validation/auth/login'\n\nclass Login extends Component {\n  constructor () {\n    super()\n    this.state = {\n      email: '',\n      password: '',\n      errors: {},\n      server: {}\n    }\n\n    this.changeHandler = this.changeHandler.bind(this)\n    this.submitHandler = this.submitHandler.bind(this)\n  }\n\n  componentDidMount () {\n    if (this.props.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.auth.isAuthenticated) {\n      this.props.history.push('/dashboard')\n    }\n\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n\n    if (nextProps.server) {\n      this.setState({ server: nextProps.server })\n    }\n  }\n\n  changeHandler (event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  isValid (data) {\n    const { errors, isValid } = validateLoginInput(data)\n    if (!isValid) {\n      this.setState({ errors })\n    }\n    return isValid\n  }\n\n  submitHandler (event) {\n    event.preventDefault()\n    const userData = {\n      email: this.state.email,\n      password: this.state.password\n    }\n    if (this.isValid(userData)) {\n      this.setState({ errors: {} })\n      this.props.loginUser(userData)\n    }\n  }\n\n  render () {\n    const { errors } = this.state\n    const { success, error } = this.state.server\n\n    const content = this.props.auth.isLoading\n      ? <Spinner />\n      : <div className='container center'>\n        <div className='row justify-content-center p-5'>\n\n          <div className='col-sm-6 mb-10'>\n            {success && <Message msg={success} type='alert-success' />}\n            {error && <Message msg={error} type='alert-danger' />}\n            <h3 className='h3 pb-1'>Admin Panel Login</h3>\n            <hr />\n            <form noValidate onSubmit={this.submitHandler}>\n              <fieldset>\n                <div className='form-group'>\n                  <label htmlFor='email'>Email address</label>\n                  <TextFieldGroup\n                    placeholder='Email Address'\n                    name='email'\n                    type='email'\n                    id='email'\n                    value={this.state.email}\n                    onChange={this.changeHandler}\n                    error={errors.email}\n                    />\n                </div>\n                <div className='form-group'>\n                  <label htmlFor='password'>Password</label>\n                  <TextFieldGroup\n                    placeholder='Password'\n                    name='password'\n                    type='password'\n                    id='password'\n                    value={this.state.password}\n                    onChange={this.changeHandler}\n                    error={errors.password}\n                    />\n                </div>\n\n                <button\n                  type='submit'\n                  className='btn btn-info btn-lg btn-block'\n                  >\n                    Login\n                  </button>\n\n              </fieldset>\n            </form>\n          </div>\n        </div>\n      </div>\n\n    return content\n  }\n}\n\nLogin.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  server: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  server: state.server\n})\n\nexport default connect(mapStateToProps, { loginUser })(withRouter(Login))\n","import axios from 'axios'\n\nimport { GET_ERRORS, LIST_USERS } from './types'\nimport { SERVER_URL } from '../config/url'\n\n// Get users list\nexport const listUsers = () => dispatch => {\n  axios\n    .get(SERVER_URL + '/api/users/list')\n    .then(res => {\n      dispatch({\n        type: LIST_USERS,\n        payload: res.data\n      })\n    })\n    .catch(err => {\n      if (err.response) {\n        dispatch({\n          type: GET_ERRORS,\n          payload: err.response.data\n        })\n      }\n    })\n}\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { listUsers } from '../../actions/userActions'\n\nclass User extends Component {\n  constructor () {\n    super()\n    this.state = {\n      users: [],\n      errors: {}\n    }\n  }\n  componentDidMount () {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push('/')\n    }\n\n    // List Users\n    this.props.listUsers()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.errors) {\n      this.setState({ errors: nextProps.errors })\n    }\n\n    this.setState({\n      users: nextProps.users\n    })\n  }\n\n  render () {\n    const users = this.state.users.users\n    const items =\n      users &&\n      users.map(user => {\n        return (\n          <tr key={user._id}>\n            <td>{user.firstName} {' '} {user.lastName}</td>\n            <td>{user.username}</td>\n            <td>{user.email}</td>\n            <td>\n              <button className='btn btn-success'>Edit</button>\n              {' '}\n              <button className='btn btn-danger'>Delete</button>\n            </td>\n          </tr>\n        )\n      })\n    return (\n      <div>\n        <div className='pt-2'>\n          <h3 className='float-left'>User</h3>\n          <button className='btn btn-info float-right'>Add New</button>\n        </div>\n        <table className='table table-hover table-striped'>\n          <thead>\n            <tr className='table-info'>\n              <th scope='col'>Name</th>\n              <th scope='col'>Username</th>\n              <th scope='col'>Email</th>\n              <th scope='col'>Action</th>\n            </tr>\n          </thead>\n          <tbody>{items}</tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nUser.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  users: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors,\n  users: state.users\n})\n\nexport default connect(mapStateToProps, { listUsers })(withRouter(User))\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\nimport moment from 'moment'\nimport { withRouter } from 'react-router-dom'\nimport { listUsers } from '../../actions/userActions'\n\nclass Dashboard extends Component {\n  constructor () {\n    super()\n    this.state = {\n      users: {},\n      errors: {}\n    }\n  }\n  componentDidMount () {\n    if (!this.props.auth.isAuthenticated) {\n      this.props.history.push('/')\n    }\n\n    // List users\n    this.props.listUsers()\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if (nextProps.users) {\n      this.setState({ users: nextProps.users })\n    }\n  }\n\n  render () {\n    const { users } = this.state.users\n    return (\n      <div className='row justify-content-center p-5'>\n        <div className='col-sm-6 mb-10 justify-content-center'>\n          <h2>Dashboard</h2>\n          <h5 className='bg-light p-1'>\n            You're logged in as: {this.props.auth.user.name}\n          </h5>\n          <hr />\n          <h4>Registered Users</h4>\n          <ul>\n            {users &&\n              users.map(user => (\n                <li key={user._id}>\n                  <strong>{user.name}</strong>\n                  {' '}\n                  <i>\n                    <small>(registered at {moment(user.date).fromNow()})</small>\n                  </i>\n                </li>\n              ))}\n          </ul>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nDashboard.propTypes = {\n  listUsers: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  users: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  users: state.users\n})\n\nexport default connect(mapStateToProps, { listUsers })(withRouter(Dashboard))\n","import React from 'react'\n\nexport default function Item(props) {\n  return (\n    <h3>\n      {props.name} -{' '}\n      <span>\n        <a href=\"#\" onClick={props.delete}>\n          x\n        </a>\n      </span>\n    </h3>\n  )\n}\n","import React, { Component } from 'react'\n\nimport Item from './Item'\n\nclass Test extends Component {\n  constructor() {\n    super()\n    this.state = {\n      name: '',\n      nameArr: []\n    }\n    this.deleteHandler.bind(this)\n  }\n\n  changeHandler(event) {\n    console.log(event.target.value)\n    this.setState({ name: event.target.value })\n  }\n\n  submitHandler(event) {\n    event.preventDefault()\n    if (!this.state.name) return\n\n    let arr = [...this.state.nameArr]\n    arr.push(this.state.name)\n\n    this.setState({ nameArr: arr, name: '' })\n  }\n\n  deleteHandler(event, name) {\n    event.preventDefault()\n    let arr = [...this.state.nameArr]\n    for (var i = 0; i <= arr.length - 1; i++) {\n      if (arr[i] === name) {\n        arr.splice(i, 1)\n      }\n    }\n\n    this.setState({ nameArr: arr })\n  }\n\n  render() {\n    console.log(this.state.nameArr)\n    return (\n      <div>\n        <h2>Test</h2>\n        <form onSubmit={this.submitHandler.bind(this)}>\n          <input\n            onChange={this.changeHandler.bind(this)}\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n        {this.state.nameArr.map(item => (\n          <Item name={item} delete={event => this.deleteHandler(event, item)} />\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default Test\n","import React, { Component } from 'react'\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom'\nimport jwt_decode from 'jwt-decode'\nimport setAuthToken from './utils/setAuthToken'\nimport { setCurrentUser, logoutUser } from './actions/authActions'\nimport { setFakeCurrentUser } from './actions/fakeAuthActions'\nimport { Provider } from 'react-redux'\nimport store from './store'\n\nimport Navbar from './components/layout/Navbar'\nimport Landing from './components/layout/Landing'\n\nimport A from './components/a/A'\nimport B from './components/b/B'\nimport C from './components/c/C'\n\nimport More from './components/more/More.js'\nimport Register from './components/auth/Register'\nimport Login from './components/auth/Login'\nimport User from './components/user/User'\n\nimport './App.css'\nimport Dashboard from './components/pages/Dashboard'\n\nimport Test from './components/Test'\n\n// Check for fakeToken\nif (localStorage.fakeToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.fakeToken)\n\n  // Set user and isAuthenticated\n  store.dispatch(setFakeCurrentUser(JSON.parse(localStorage.fakeUser)))\n}\n\n// Check for token\nif (localStorage.jwtToken) {\n  // Set auth token header auth\n  setAuthToken(localStorage.jwtToken)\n  // Decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken)\n  // Set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded))\n\n  // Check for expired token\n  const currentTime = Date.now() / 1000\n  if (decoded.exp < currentTime) {\n    // Logout user\n    store.dispatch(logoutUser())\n    // TODO: Clear current Profile\n\n    // Redirect to login\n    window.location.href = '/'\n  }\n}\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"container\">\n              <Switch>\n                <Route exact path=\"/\" component={Landing} />\n                <Route exact path=\"/a/\" component={A} />\n                <Route exact path=\"/b/\" component={B} />\n                <Route exact path=\"/c/\" component={C} />\n                <Route exact path=\"/register/\" component={Register} />\n                <Route exact path=\"/login/\" component={Login} />\n                <Route exact path=\"/more/\" component={More} />\n                <Route exact path=\"/user/\" component={User} />\n                <Route exact path=\"/dashboard/\" component={Dashboard} />\n                <Route exact path=\"/test/\" component={Test} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport $ from 'jquery'\n\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css'\n// import 'bootstrap/dist/js/bootstrap.min.js'\n// import './assets/css/bootstrap.min.css'\nimport 'font-awesome/css/font-awesome.css'\nimport 'jquery-ui-dist/jquery-ui.css'\n\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nwindow.jQuery = window.$ = $\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","const isEmpty = value =>\n  value === undefined ||\n  value === null ||\n  (typeof value === 'object' && Object.keys(value).length === 0) ||\n  (typeof value === 'string' && value.trim().length === 0)\n\nmodule.exports = isEmpty\n","module.exports = __webpack_public_path__ + \"static/media/Spinner.4e242a31.gif\";"],"sourceRoot":""}